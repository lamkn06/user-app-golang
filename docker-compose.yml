version: "3.8"

services:
  # Database service
  db:
    image: postgis/postgis:16-3.4
    platform: linux/amd64
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-local}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-local}
      POSTGRES_DB: ${POSTGRES_DB:-db_name}
      POSTGRES_HOST_AUTH_METHOD: password
    networks:
      - user_app_network
    command: postgres -N 500
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-local} -d ${POSTGRES_DB:-db_name}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Application service
  app:
    build: .
    restart: always
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=${POSTGRES_USER:-local}
      - DB_PASSWORD=${POSTGRES_PASSWORD:-local}
      - DB_NAME=${POSTGRES_DB:-db_name}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-secret-key-change-in-production}
      - JWT_EXPIRATION=${JWT_EXPIRATION:-24h}
      - JWT_REFRESH_EXPIRATION=${JWT_REFRESH_EXPIRATION:-168h}
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - user_app_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local

networks:
  user_app_network:
    name: user_app_network
